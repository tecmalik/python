<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ffa91b59-6b73-482e-93d1-1eca3c1c5c3b" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data_structures/dsa/myarraylist.py" beforeDir="false" afterPath="$PROJECT_DIR$/data_structures/dsa/myarraylist.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data_structures/dsa/myset.py" beforeDir="false" afterPath="$PROJECT_DIR$/data_structures/dsa/myset.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data_structures/test/dsa/test_myarraylist.py" beforeDir="false" afterPath="$PROJECT_DIR$/data_structures/test/dsa/test_myarraylist.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data_structures/test/dsa/test_myset.py" beforeDir="false" afterPath="$PROJECT_DIR$/data_structures/test/dsa/test_myset.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Unit Test" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2s7B6ZM7HqNZUPMDjPudCnK865t" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Python tests.Python tests for dsa.test_myArrylist.MySetTest.test_if_my_array_list_can_add_x_y_and_remove_y_element.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for dsa.test_myarraylist.MySetTest.test_if_my_array_list_can_add_g_h_i_clear_my_list.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for dsa.test_myarraylist.MySetTest.test_if_my_array_list_can_return_a_size.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for dsa.test_myarraylist.MySetTest.test_if_my_array_list_can_return_error_message_if_remove_item_not_found.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for dsa.test_myset.MySetTest.test_if_mySet_can_clear.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for dsa.test_myset.MySetTest.test_if_mySet_can_contain_more_value.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for dsa.test_myset.MySetTest.test_if_mySet_can_remove_an_element.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for dsa.test_myset.MySetTest.test_if_mySet_is_not_empty.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for dsa.test_myset.MySetTest.test_if_myset_wont_add_duplicate.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for my_data_structures.test_my_data_structures.MyArray.test_something.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for my_data_structures.test_my_data_structures.MyTestCase.test_something.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for mydatastructures.myarray.MyArray.test_something.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for mydatastructures.test_myarray.MyArray.test_something.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_encrypt_text.EncryptTextROT13.test_if_encrypt_function_returns_a_correct_string_value.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_myArrylist.MySetTest.test_if_my_array_list_can_check_if_my_list_contains_x.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_myArrylist.MySetTest.test_if_myset_can_add_x_y_and_remove_y_element.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_myArrylist.MySetTest.test_if_myset_can_gret_items_using_index.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_myArrylist.MySetTest.test_if_myset_can_return_a_size.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_myArrylist.MySetTest.test_if_myset_can_return_error_message_if_remove_item_not_found.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_myArrylist.MySetTest.test_if_myset_is_empty.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_myArrylist.MySetTest.test_if_myset_is_not_empty.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_my_data_structures.MyArray.test_something.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_my_data_structures.MyArrayTest.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_my_data_structures.MyArrayTest.test_if_my_array_is_not_empty.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_my_data_structures.MyArrayTest.test_if_myarray_has_a_size.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_my_data_structures.MyArrayTest.test_if_myarray_of_length_2_will_append_only_2_element.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_my_data_structures.MyArrayTest.test_if_myarray_of_length_3_will_append_2_element_and_return_3.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_my_data_structures.MyArrayTest.test_something.executor&quot;: &quot;Run&quot;,
    &quot;Python.myset.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/DELL/Documents/tecmalik-Git-Repo/python class/python&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\DELL\Documents\tecmalik-Git-Repo\python class\python\data_structures\dsa" />
      <recent name="C:\Users\DELL\Documents\tecmalik-Git-Repo\python class\python\data_structures\test\dsa" />
      <recent name="C:\Users\DELL\Documents\tecmalik-Git-Repo\python class\python\datastructures" />
      <recent name="C:\Users\DELL\Documents\tecmalik-Git-Repo\python class\python\datastructures\data_structures\test" />
      <recent name="C:\Users\DELL\Documents\tecmalik-Git-Repo\python class\python\datastructures\data_structures" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.Python tests for dsa.test_myset.MySetTest.test_if_mySet_can_remove_an_element">
    <configuration name="Python tests for dsa.test_myArrylist.MySetTest" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data_structures/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;dsa.test_myArrylist.MySetTest&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for dsa.test_myArrylist.MySetTest" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data_structures/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;dsa.test_myArrylist.MySetTest&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for dsa.test_myArrylist.MySetTest" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data_structures/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;dsa.test_myArrylist.MySetTest&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for dsa.test_myarraylist.MySetTest.test_if_my_array_list_can_add_g_h_i_clear_my_list" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data_structures/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;dsa.test_myarraylist.MySetTest.test_if_my_array_list_can_add_g_h_i_clear_my_list&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for dsa.test_myset.MySetTest.test_if_mySet_can_clear" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data_structures/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;dsa.test_myset.MySetTest.test_if_mySet_can_clear&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for dsa.test_myset.MySetTest.test_if_mySet_can_contain_more_value" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data_structures/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;dsa.test_myset.MySetTest.test_if_mySet_can_contain_more_value&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for dsa.test_myset.MySetTest.test_if_mySet_can_remove_an_element" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data_structures/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;dsa.test_myset.MySetTest.test_if_mySet_can_remove_an_element&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for dsa.test_myset.MySetTest.test_if_myset_wont_add_duplicate" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data_structures/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;dsa.test_myset.MySetTest.test_if_myset_wont_add_duplicate&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_myArrylist.MySetTest.test_if_myset_can_add_x_y_and_remove_y_element" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data_structures/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_myArrylist.MySetTest.test_if_myset_can_add_x_y_and_remove_y_element&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_myArrylist.MySetTest.test_if_myset_can_gret_items_using_index" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data_structures/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_myArrylist.MySetTest.test_if_myset_can_gret_items_using_index&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_myArrylist.MySetTest.test_if_myset_can_return_a_size" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/data_structures/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_myArrylist.MySetTest.test_if_myset_can_return_a_size&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for dsa.test_myset.MySetTest.test_if_mySet_can_remove_an_element" />
        <item itemvalue="Python tests.Python tests for dsa.test_myarraylist.MySetTest.test_if_my_array_list_can_add_g_h_i_clear_my_list" />
        <item itemvalue="Python tests.Python tests for dsa.test_myset.MySetTest.test_if_mySet_can_clear" />
        <item itemvalue="Python tests.Python tests for dsa.test_myset.MySetTest.test_if_myset_wont_add_duplicate" />
        <item itemvalue="Python tests.Python tests for dsa.test_myset.MySetTest.test_if_mySet_can_contain_more_value" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-deb605915726-JavaScript-PY-243.22562.220" />
        <option value="bundled-python-sdk-0fc6c617c4bd-9a18a617cbe4-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-243.22562.220" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ffa91b59-6b73-482e-93d1-1eca3c1c5c3b" name="Changes" comment="" />
      <created>1737796557764</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1737796557764</updated>
      <workItem from="1737796562153" duration="1018000" />
      <workItem from="1737873648155" duration="24057000" />
      <workItem from="1737973444701" duration="2041000" />
      <workItem from="1738133322556" duration="9465000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/python$myset.coverage" NAME="myset Coverage Results" MODIFIED="1738166814498" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/data_structures/dsa" />
    <SUITE FILE_PATH="coverage/python$.coverage" NAME=" Coverage Results" MODIFIED="1738168686574" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/data_structures/test" />
  </component>
</project>